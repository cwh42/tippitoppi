=begin
#SumUp REST API

#SumUpâ€™s REST API operates with [JSON](https://www.json.org/json-en.html) HTTP requests and responses. The request bodies are sent through resource-oriented URLs and use the standard [HTTP response codes](https://developer.mozilla.org/docs/Web/HTTP/Status).  You can experiment and work on your integration in a sandbox that doesn't affect your regular data and doesn't process real transactions. To create a sandbox merchant account visit the [dashboard](https://me.sumup.com/settings/developer). To use the sandbox when interacting with SumUp APIs [create an API](https://me.sumup.com/settings/api-keys) key and use it for [authentication](https://developer.sumup.com/api/authentication). 

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::SubaccountsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SubaccountsApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::SubaccountsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SubaccountsApi' do
    it 'should create an instance of SubaccountsApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::SubaccountsApi)
    end
  end

  # unit tests for compat_get_operator
  # Get operator
  # Returns specific operator.
  # @param operator_id 
  # @param [Hash] opts the optional parameters
  # @return [Operator]
  describe 'compat_get_operator test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_sub_account
  # Create operator.
  # Creates new operator for currently authorized users&#39; merchant.
  # @param create_sub_account_request 
  # @param [Hash] opts the optional parameters
  # @return [Operator]
  describe 'create_sub_account test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for deactivate_sub_account
  # Disable operator.
  # @param operator_id 
  # @param [Hash] opts the optional parameters
  # @return [Operator]
  describe 'deactivate_sub_account test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_sub_accounts
  # List operators.
  # Returns list of operators for currently authorized user&#39;s merchant.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :query Search query used to filter users that match given query term.  Current implementation allow querying only over the email address. All operators whos email address contains the query string are returned. 
  # @option opts [Boolean] :include_primary If true the list of operators will include also the primary user.
  # @return [Array<Operator>]
  describe 'list_sub_accounts test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_sub_account
  # Update operator.
  # Updates operator. If the operator was disabled and their password is updated they will be unblocked.
  # @param operator_id 
  # @param update_sub_account_request 
  # @param [Hash] opts the optional parameters
  # @return [Operator]
  describe 'update_sub_account test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
